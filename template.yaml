# /vpc/template.yaml

AWSTemplateFormatVersion: 2010-09-09

Description: >
  This template deploys a VPC, with a pair of public and private subnets spread 
  across two Availabilty Zones. It deploys an Internet Gateway, with a default 
  route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), 
  and default routes for them in the private subnets.

Parameters:
  ProjectName:
    Type: String
    Description: The projects call sign that will be prefixed to resource names.

  TagCreatorParameter:
    Type: String
    Description: The email of the entity whom this project belongs to.
    AllowedPattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
    ConstraintDescription: Must be a valid email address defined in RFC 5322 Official Standard.

  VpcCIDR:
    Type: String
    Description: Please enter the IP range (CIDR notation) for this VPC. For more info, see http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html#VPC_Sizing.
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: Must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.

  SubnetPublic1CIDR:
    Type: String
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone.
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: Must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.

  SubnetPublic2CIDR:
    Type: String
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone.
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: Must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.

  SubnetPrivate1CIDR:
    Type: String
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone.
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: Must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.

  SubnetPrivate2CIDR:
    Type: String
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone.
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: Must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.

  EnableVpcFlowLog:
    Type: String
    Description: Optional configuration for enabling VPC Flow Logs sent to CloudWatch Logs. Default configuration has no VPC Flow Logs enabled.
    AllowedPattern: "^(true|false)$"
    Default: "false"
    ConstraintDescription: must be true or false (case sensitive).

Conditions:
  VpcFlowLog: !Equals [!Ref EnableVpcFlowLog, "true"]

Resources:
  ##
  ## ::VPC
  ##
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Creator
          Value: !Ref TagCreatorParameter
        - Key: Name
          Value: !Sub ${ProjectName}-vpc

  ##
  ## ::Subnet
  ##
  SubnetPublic1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      VpcId: !Ref VPC
      CidrBlock: !Ref SubnetPublic1CIDR
      Tags:
        - Key: Creator
          Value: !Ref TagCreatorParameter
        - Key: Name
          Value: !Sub ${ProjectName}-subnet-public-a
        - Key: Type
          Value: public

  SubnetPublic2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      VpcId: !Ref VPC
      CidrBlock: !Ref SubnetPublic2CIDR
      Tags:
        - Key: Creator
          Value: !Ref TagCreatorParameter
        - Key: Name
          Value: !Sub ${ProjectName}-subnet-public-b
        - Key: Type
          Value: public

  SubnetPrivate1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      VpcId: !Ref VPC
      CidrBlock: !Ref SubnetPrivate1CIDR
      Tags:
        - Key: Creator
          Value: !Ref TagCreatorParameter
        - Key: Name
          Value: !Sub ${ProjectName}-subnet-private-a
        - Key: Type
          Value: private

  SubnetPrivate2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      VpcId: !Ref VPC
      CidrBlock: !Ref SubnetPrivate2CIDR
      Tags:
        - Key: Creator
          Value: !Ref TagCreatorParameter
        - Key: Name
          Value: !Sub ${ProjectName}-subnet-private-b
        - Key: Type
          Value: private

  ##
  ## ::RouteTable
  ##
  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Creator
          Value: !Ref TagCreatorParameter
        - Key: Name
          Value: !Sub ${ProjectName}-rt-public

  RouteTablePrivate1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Creator
          Value: !Ref TagCreatorParameter
        - Key: Name
          Value: !Sub ${ProjectName}-rt-private-a

  RouteTablePrivate2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Creator
          Value: !Ref TagCreatorParameter
        - Key: Name
          Value: !Sub ${ProjectName}-rt-private-b

  ##
  ## ::SubnetRouteTableAssociation
  ##
  SubnetRouteTableAssociationPublic1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPublic1
      RouteTableId:
        Ref: RouteTablePublic

  SubnetRouteTableAssociationPublic2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPublic2
      RouteTableId:
        Ref: RouteTablePublic

  SubnetRouteTableAssociationPrivate1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPrivate1
      RouteTableId:
        Ref: RouteTablePrivate1

  SubnetRouteTableAssociationPrivate2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPrivate2
      RouteTableId:
        Ref: RouteTablePrivate2

  ##
  ## ::Route
  ##
  RoutePublic:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  RoutePrivate1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RouteTablePrivate1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NAT1

  RoutePrivate2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RouteTablePrivate2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NAT2

  ##
  ## ::NatGateway
  ##
  NAT1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - EIP1
          - AllocationId
      SubnetId:
        Ref: SubnetPublic1
      Tags:
        - Key: Creator
          Value: !Ref TagCreatorParameter
        - Key: Name
          Value: !Sub ${ProjectName}-nat-public-a

  NAT2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - EIP2
          - AllocationId
      SubnetId:
        Ref: SubnetPublic2
      Tags:
        - Key: Creator
          Value: !Ref TagCreatorParameter
        - Key: Name
          Value: !Sub ${ProjectName}-nat-public-b

  ##
  ## ::EIP
  ##
  EIP1:
    DependsOn: AttachGateway
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: Creator
          Value: !Ref TagCreatorParameter
        - Key: Name
          Value: !Sub ${ProjectName}-eip-public-a

  EIP2:
    DependsOn: AttachGateway
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: Creator
          Value: !Ref TagCreatorParameter
        - Key: Name
          Value: !Sub ${ProjectName}-eip-public-b

  ##
  ## ::InternetGateway
  ##
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Creator
          Value: !Ref TagCreatorParameter
        - Key: Name
          Value: !Sub ${ProjectName}-igw

  ##
  ## ::VPCGatewayAttachment
  ##
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  ##
  ## ::Role
  ##
  FlowLogRole:
    Type: AWS::IAM::Role
    Condition: VpcFlowLog
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - vpc-flow-logs.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: AllowPublishingFlowLogsToCloudWatch
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                Resource: "*"

  ##
  ## ::LogGroup
  ##
  FlowLogLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: VpcFlowLog
    Properties:
      LogGroupName: !Sub ${ProjectName}-flowlog-vpc
      RetentionInDays: 7

  ##
  ## ::FlowLog
  ##
  VpcFlowLog:
    Type: AWS::EC2::FlowLog
    Condition: VpcFlowLog
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      DeliverLogsPermissionArn: !GetAtt FlowLogRole.Arn
      LogDestination: !GetAtt FlowLogLogGroup.Arn
      LogDestinationType: cloud-watch-logs
      ResourceId: !Ref VPC
      ResourceType: VPC
      TrafficType: ALL

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC

  SubnetsPublic:
    Description: A list of the public subnets
    Value: !Join [",", [!Ref SubnetPublic1, !Ref SubnetPublic2]]

  SubnetsPrivate:
    Description: A list of the private subnets
    Value: !Join [",", [!Ref SubnetPrivate1, !Ref SubnetPrivate2]]

  SubnetPublic1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref SubnetPublic1

  SubnetPublic2:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref SubnetPublic2

  SubnetPrivate1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref SubnetPrivate1

  SubnetPrivate2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref SubnetPrivate2
